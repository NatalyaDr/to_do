{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041D\\u0430\\u0442\\u0430\\u043B\\u044C\\u044F\\\\Desktop\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u043E\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 (3)\\\\todo-list\\\\src\\\\App.js\";\nimport React from 'react';\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyPress = e => {\n      if (e.key === 'Enter') {\n        let Alltodos = this.state.Alltodos;\n        Alltodos.push({\n          id: Math.random(),\n          text: this.state.todoItem,\n          selected: false,\n          type: 'active'\n        });\n        this.setState({\n          Alltodos,\n          todoItem: ''\n        });\n        this.saveTodos(Alltodos);\n      }\n    };\n\n    this.selectOrUnselect = index => {\n      let Alltodos = this.state.Alltodos;\n      Alltodos[index].selected = !Alltodos[index].selected;\n      Alltodos[index].type = Alltodos[index].selected ? 'completed' : 'active';\n      this.setState({\n        Alltodos\n      });\n      this.saveTodos(Alltodos);\n    };\n\n    this.deleteteItem = id => {\n      let Alltodos = this.state.Alltodos.filter(item => item.id !== id);\n      this.setState({\n        Alltodos\n      });\n      this.saveTodos(Alltodos);\n    };\n\n    this.setTab = tabName => {\n      let {\n        Alltodos,\n        todosOnlyTabType\n      } = this.state;\n      todosOnlyTabType = Alltodos.filter(el => el.type === tabName);\n      this.setState({\n        todosOnlyTabType,\n        activeTab: tabName\n      });\n    };\n\n    this.changeText = (text, index) => {\n      let Alltodos = this.state.Alltodos;\n      Alltodos[index].text = text;\n      this.setState({\n        Alltodos\n      });\n      this.saveTodos(Alltodos);\n    };\n\n    this.saveTodos = todos => {\n      localStorage.setItem('todos', JSON.stringify(todos));\n    };\n\n    this.getTodos = () => {\n      this.setState({\n        Alltodos: JSON.parse(localStorage.getItem('todos') || '[]')\n      });\n    };\n\n    this.state = {\n      Alltodos: [],\n      todosOnlyTabType: [],\n      todoItem: '',\n      activeTab: 'All'\n    };\n  }\n\n  componentDidMount() {\n    this.getTodos();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main\",\n      onKeyPress: this.handleKeyPress,\n      tabIndex: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"todo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"todos\"), React.createElement(\"div\", {\n      className: \"todo-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.todoItem,\n      onChange: ({\n        target\n      }) => this.setState({\n        todoItem: target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state[this.state.activeTab === 'All' ? 'Alltodos' : 'todosOnlyTabType'].map((el, index) => React.createElement(\"div\", {\n      className: \"todo-item\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"todo-checkbox\",\n      checked: el.selected,\n      onChange: () => this.selectOrUnselect(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: `todo-text ${el.type}`,\n      onChange: ({\n        target\n      }) => this.changeText(target.value, index),\n      value: el.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"todo-delete\",\n      onClick: () => this.deleteteItem(el.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"X\")))), React.createElement(\"div\", {\n      className: \"tabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tab\",\n      onClick: () => this.setState({\n        activeTab: 'All'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"div\", {\n      className: \"tab\",\n      onClick: () => this.setTab('active'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Active\"), React.createElement(\"div\", {\n      className: \"tab\",\n      onClick: () => this.setTab('completed'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Completed\")))));\n  }\n\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["C:/Users/Наталья/Desktop/Практическое задание/Новая папка (3)/todo-list/src/App.js"],"names":["React","TodoApp","Component","constructor","props","handleKeyPress","e","key","Alltodos","state","push","id","Math","random","text","todoItem","selected","type","setState","saveTodos","selectOrUnselect","index","deleteteItem","filter","item","setTab","tabName","todosOnlyTabType","el","activeTab","changeText","todos","localStorage","setItem","JSON","stringify","getTodos","parse","getItem","componentDidMount","render","target","value","map"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Alltodos: [],\n      todosOnlyTabType: [],\n      todoItem: '',\n      activeTab: 'All'\n    }\n  }\n\n  componentDidMount() {\n    this.getTodos()\n  }\n\n  handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      let Alltodos = this.state.Alltodos\n      Alltodos.push({\n        id: Math.random(),\n        text: this.state.todoItem,\n        selected: false,\n        type: 'active'\n      })\n      this.setState({ Alltodos, todoItem: '' })\n      this.saveTodos(Alltodos)\n    }\n  };\n\n  selectOrUnselect = (index) => {\n    let Alltodos = this.state.Alltodos\n    Alltodos[index].selected = !Alltodos[index].selected\n    Alltodos[index].type = Alltodos[index].selected ? 'completed' : 'active'\n    this.setState({ Alltodos })\n    this.saveTodos(Alltodos)\n  }\n\n  deleteteItem = (id) => {\n    let Alltodos = this.state.Alltodos.filter(item => item.id !== id)\n    this.setState({ Alltodos })\n    this.saveTodos(Alltodos)\n  }\n\n  setTab = (tabName) => {\n    let { Alltodos, todosOnlyTabType } = this.state\n    todosOnlyTabType = Alltodos.filter(el => el.type === tabName)\n    this.setState({ todosOnlyTabType, activeTab: tabName })\n  }\n\n  changeText = (text, index) => {\n    let Alltodos = this.state.Alltodos\n    Alltodos[index].text = text\n    this.setState({ Alltodos })\n    this.saveTodos(Alltodos)\n  }\n\n  saveTodos = (todos) => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }\n\n  getTodos = () => {\n    this.setState({ Alltodos: JSON.parse(localStorage.getItem('todos') || '[]') })\n  }\n\n\n  render() {\n    return (\n      <div className=\"main\" onKeyPress={this.handleKeyPress} tabIndex=\"1\">\n        <div className=\"todo\">\n          <div className=\"title\">todos</div>\n          <div className=\"todo-form\">\n            <input type=\"text\"\n              value={this.state.todoItem}\n              onChange={({ target }) => this.setState({ todoItem: target.value })} />\n            <div className=\"items\">\n              {this.state[this.state.activeTab === 'All' ? 'Alltodos' : 'todosOnlyTabType'].map((el, index) =>\n                <div className=\"todo-item\" key={index}>\n                  <input\n                    type=\"checkbox\"\n                    className=\"todo-checkbox\"\n                    checked={el.selected}\n                    onChange={() => this.selectOrUnselect(index)} />\n                  <input\n                    type=\"text\"\n                    className={`todo-text ${el.type}`}\n                    onChange={({ target }) => this.changeText(target.value, index)}\n                    value={el.text} />\n                  <div\n                    className=\"todo-delete\"\n                    onClick={() => this.deleteteItem(el.id)}>X</div>\n                </div>\n              )}\n            </div>\n            <div className=\"tabs\">\n              <div className=\"tab\" onClick={() => this.setState({ activeTab: 'All' })}>All</div>\n              <div className=\"tab\" onClick={() => this.setTab('active')}>Active</div>\n              <div className=\"tab\" onClick={() => this.setTab('completed')}>Completed</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}